# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
}

interface ContentfulEntry {
  children: [Node!]!
  contentful_id: String!
  id: ID!
  internal: Internal!
  node_locale: String!
  parent: Node
}

interface ContentfulReference {
  contentful_id: String!
  id: ID!
}

"Node Interface"
interface Node {
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

type ContentfulAsset implements ContentfulReference & Node {
  children: [Node!]!
  contentful_id: String!
  createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  description: String
  file: ContentfulAssetFile
  gatsbyImageData(
    """
    If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    """
    aspectRatio: Float
    "Background color applied to the wrapper, or when \"letterboxing\" an image to another aspect ratio."
    backgroundColor: String
    """
    Specifies the image widths to generate. You should rarely need to change this. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    It will never generate any images larger than the source.
    """
    breakpoints: [Int]
    """
    Desired corner radius in pixels. Results in an image with rounded corners.
    Pass `-1` for a full circle/ellipse.
    """
    cornerRadius: Int = 0
    cropFocus: ContentfulImageCropFocus
    """
    The image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.
    The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    both PNG and JPG is not supported and will be ignored.
    """
    formats: [GatsbyImageFormat] = [NO_CHANGE, WEBP]
    "If set, the height of the generated image. If omitted, it is calculated from the supplied width, matching the aspect ratio of the source image."
    height: Int
    jpegProgressive: Boolean = true
    """
    The layout for the image.
    FIXED: A static image sized, that does not resize according to the screen width
    FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    """
    layout: GatsbyImageLayout
    """
    A list of image pixel densities to generate for FIXED and CONSTRAINED images. You should rarely need to change this. It will never generate images larger than the source, and will always include a 1x image.
    Default is [ 1, 2 ] for fixed images, meaning 1x, 2x, 3x, and [0.25, 0.5, 1, 2] for fluid. In this case, an image with a fluid layout and width = 400 would generate images at 100, 200, 400 and 800px wide.
    """
    outputPixelDensities: [Float]
    """
    Format of generated placeholder image, displayed while the main image loads.
    BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    TRACED_SVG: a low-resolution traced SVG of the image.
    NONE: no placeholder. Set the argument "backgroundColor" to use a fixed background color.
    """
    placeholder: GatsbyImagePlaceholder
    quality: Int = 50
    resizingBehavior: ImageResizingBehavior
    """
    The "sizes" property, passed to the img tag. This describes the display size of the image.
    This does not affect the generated images, but is used by the browser to decide which images to download. You can leave this blank for fixed images, or if the responsive image
    container will be the full width of the screen. In these cases we will generate an appropriate value.
    """
    sizes: String
    """
    The display width of the generated image for layout = FIXED, and the display width of the largest image for layout = CONSTRAINED.
    The actual largest image resolution will be this value multiplied by the largest value in outputPixelDensities
    Ignored if layout = FLUID.
    """
    width: Int
  ): JSON
  id: ID!
  internal: Internal!
  node_locale: String
  parent: Node
  spaceId: String
  sys: ContentfulAssetSys
  title: String
  updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
}

type ContentfulAssetConnection {
  distinct(field: ContentfulAssetFieldsEnum!): [String!]!
  edges: [ContentfulAssetEdge!]!
  group(
    field: ContentfulAssetFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulAssetGroupConnection!]!
  max(field: ContentfulAssetFieldsEnum!): Float
  min(field: ContentfulAssetFieldsEnum!): Float
  nodes: [ContentfulAsset!]!
  pageInfo: PageInfo!
  sum(field: ContentfulAssetFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulAssetEdge {
  next: ContentfulAsset
  node: ContentfulAsset!
  previous: ContentfulAsset
}

type ContentfulAssetFile {
  contentType: String
  details: ContentfulAssetFileDetails
  fileName: String
  url: String
}

type ContentfulAssetFileDetails {
  image: ContentfulAssetFileDetailsImage
  size: Int
}

type ContentfulAssetFileDetailsImage {
  height: Int
  width: Int
}

type ContentfulAssetGroupConnection {
  distinct(field: ContentfulAssetFieldsEnum!): [String!]!
  edges: [ContentfulAssetEdge!]!
  field: String!
  fieldValue: String
  group(
    field: ContentfulAssetFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulAssetGroupConnection!]!
  max(field: ContentfulAssetFieldsEnum!): Float
  min(field: ContentfulAssetFieldsEnum!): Float
  nodes: [ContentfulAsset!]!
  pageInfo: PageInfo!
  sum(field: ContentfulAssetFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulAssetSys {
  revision: Int
  type: String
}

type ContentfulContentType implements Node {
  children: [Node!]!
  description: String
  displayField: String
  id: ID!
  internal: Internal!
  name: String
  parent: Node
  sys: ContentfulContentTypeSys
}

type ContentfulContentTypeConnection {
  distinct(field: ContentfulContentTypeFieldsEnum!): [String!]!
  edges: [ContentfulContentTypeEdge!]!
  group(
    field: ContentfulContentTypeFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulContentTypeGroupConnection!]!
  max(field: ContentfulContentTypeFieldsEnum!): Float
  min(field: ContentfulContentTypeFieldsEnum!): Float
  nodes: [ContentfulContentType!]!
  pageInfo: PageInfo!
  sum(field: ContentfulContentTypeFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulContentTypeEdge {
  next: ContentfulContentType
  node: ContentfulContentType!
  previous: ContentfulContentType
}

type ContentfulContentTypeGroupConnection {
  distinct(field: ContentfulContentTypeFieldsEnum!): [String!]!
  edges: [ContentfulContentTypeEdge!]!
  field: String!
  fieldValue: String
  group(
    field: ContentfulContentTypeFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulContentTypeGroupConnection!]!
  max(field: ContentfulContentTypeFieldsEnum!): Float
  min(field: ContentfulContentTypeFieldsEnum!): Float
  nodes: [ContentfulContentType!]!
  pageInfo: PageInfo!
  sum(field: ContentfulContentTypeFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulContentTypeSys {
  type: String
}

type ContentfulEntryConnection {
  distinct(field: ContentfulEntryFieldsEnum!): [String!]!
  edges: [ContentfulEntryEdge!]!
  group(
    field: ContentfulEntryFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulEntryGroupConnection!]!
  max(field: ContentfulEntryFieldsEnum!): Float
  min(field: ContentfulEntryFieldsEnum!): Float
  nodes: [ContentfulEntry!]!
  pageInfo: PageInfo!
  sum(field: ContentfulEntryFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulEntryEdge {
  next: ContentfulEntry
  node: ContentfulEntry!
  previous: ContentfulEntry
}

type ContentfulEntryGroupConnection {
  distinct(field: ContentfulEntryFieldsEnum!): [String!]!
  edges: [ContentfulEntryEdge!]!
  field: String!
  fieldValue: String
  group(
    field: ContentfulEntryFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulEntryGroupConnection!]!
  max(field: ContentfulEntryFieldsEnum!): Float
  min(field: ContentfulEntryFieldsEnum!): Float
  nodes: [ContentfulEntry!]!
  pageInfo: PageInfo!
  sum(field: ContentfulEntryFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulFilm implements ContentfulEntry & ContentfulReference & Node {
  animPreview: ContentfulAsset
  "Returns the first child node of type contentfulFilmCreditsTextNode or null if there are no children of given type on this node"
  childContentfulFilmCreditsTextNode: contentfulFilmCreditsTextNode
  "Returns the first child node of type contentfulFilmDescriptionTextNode or null if there are no children of given type on this node"
  childContentfulFilmDescriptionTextNode: contentfulFilmDescriptionTextNode
  children: [Node!]!
  "Returns all children nodes filtered by type contentfulFilmCreditsTextNode"
  childrenContentfulFilmCreditsTextNode: [contentfulFilmCreditsTextNode]
  "Returns all children nodes filtered by type contentfulFilmDescriptionTextNode"
  childrenContentfulFilmDescriptionTextNode: [contentfulFilmDescriptionTextNode]
  contentful_id: String!
  createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  credits: contentfulFilmCreditsTextNode
  description: contentfulFilmDescriptionTextNode
  filmmaker: [ContentfulPerson]
  id: ID!
  internal: Internal!
  node_locale: String!
  parent: Node
  spaceId: String
  stillPreview: ContentfulAsset
  sys: ContentfulFilmSys
  title: String
  updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  videoSrc: String
}

type ContentfulFilmConnection {
  distinct(field: ContentfulFilmFieldsEnum!): [String!]!
  edges: [ContentfulFilmEdge!]!
  group(
    field: ContentfulFilmFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulFilmGroupConnection!]!
  max(field: ContentfulFilmFieldsEnum!): Float
  min(field: ContentfulFilmFieldsEnum!): Float
  nodes: [ContentfulFilm!]!
  pageInfo: PageInfo!
  sum(field: ContentfulFilmFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulFilmEdge {
  next: ContentfulFilm
  node: ContentfulFilm!
  previous: ContentfulFilm
}

type ContentfulFilmGroupConnection {
  distinct(field: ContentfulFilmFieldsEnum!): [String!]!
  edges: [ContentfulFilmEdge!]!
  field: String!
  fieldValue: String
  group(
    field: ContentfulFilmFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulFilmGroupConnection!]!
  max(field: ContentfulFilmFieldsEnum!): Float
  min(field: ContentfulFilmFieldsEnum!): Float
  nodes: [ContentfulFilm!]!
  pageInfo: PageInfo!
  sum(field: ContentfulFilmFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulFilmSys {
  contentType: ContentfulFilmSysContentType
  revision: Int
  type: String
}

type ContentfulFilmSysContentType {
  sys: ContentfulFilmSysContentTypeSys
}

type ContentfulFilmSysContentTypeSys {
  id: String
  linkType: String
  type: String
}

type ContentfulLink implements ContentfulEntry & ContentfulReference & Node {
  children: [Node!]!
  contentful_id: String!
  id: ID!
  internal: Internal!
  node_locale: String!
  parent: Node
}

type ContentfulLinkConnection {
  distinct(field: ContentfulLinkFieldsEnum!): [String!]!
  edges: [ContentfulLinkEdge!]!
  group(
    field: ContentfulLinkFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulLinkGroupConnection!]!
  max(field: ContentfulLinkFieldsEnum!): Float
  min(field: ContentfulLinkFieldsEnum!): Float
  nodes: [ContentfulLink!]!
  pageInfo: PageInfo!
  sum(field: ContentfulLinkFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulLinkEdge {
  next: ContentfulLink
  node: ContentfulLink!
  previous: ContentfulLink
}

type ContentfulLinkGroupConnection {
  distinct(field: ContentfulLinkFieldsEnum!): [String!]!
  edges: [ContentfulLinkEdge!]!
  field: String!
  fieldValue: String
  group(
    field: ContentfulLinkFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulLinkGroupConnection!]!
  max(field: ContentfulLinkFieldsEnum!): Float
  min(field: ContentfulLinkFieldsEnum!): Float
  nodes: [ContentfulLink!]!
  pageInfo: PageInfo!
  sum(field: ContentfulLinkFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulPage implements ContentfulEntry & ContentfulReference & Node {
  children: [Node!]!
  contentful_id: String!
  id: ID!
  internal: Internal!
  node_locale: String!
  parent: Node
}

type ContentfulPageConnection {
  distinct(field: ContentfulPageFieldsEnum!): [String!]!
  edges: [ContentfulPageEdge!]!
  group(
    field: ContentfulPageFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulPageGroupConnection!]!
  max(field: ContentfulPageFieldsEnum!): Float
  min(field: ContentfulPageFieldsEnum!): Float
  nodes: [ContentfulPage!]!
  pageInfo: PageInfo!
  sum(field: ContentfulPageFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulPageEdge {
  next: ContentfulPage
  node: ContentfulPage!
  previous: ContentfulPage
}

type ContentfulPageGroupConnection {
  distinct(field: ContentfulPageFieldsEnum!): [String!]!
  edges: [ContentfulPageEdge!]!
  field: String!
  fieldValue: String
  group(
    field: ContentfulPageFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulPageGroupConnection!]!
  max(field: ContentfulPageFieldsEnum!): Float
  min(field: ContentfulPageFieldsEnum!): Float
  nodes: [ContentfulPage!]!
  pageInfo: PageInfo!
  sum(field: ContentfulPageFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulPerson implements ContentfulEntry & ContentfulReference & Node {
  bio: ContentfulPersonBio
  children: [Node!]!
  contentful_id: String!
  createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  film: [ContentfulFilm]
  firstName: String
  id: ID!
  internal: Internal!
  lastName: String
  node_locale: String!
  parent: Node
  pronouns: [String]
  spaceId: String
  sys: ContentfulPersonSys
  updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
}

type ContentfulPersonBio {
  raw: String
}

type ContentfulPersonConnection {
  distinct(field: ContentfulPersonFieldsEnum!): [String!]!
  edges: [ContentfulPersonEdge!]!
  group(
    field: ContentfulPersonFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulPersonGroupConnection!]!
  max(field: ContentfulPersonFieldsEnum!): Float
  min(field: ContentfulPersonFieldsEnum!): Float
  nodes: [ContentfulPerson!]!
  pageInfo: PageInfo!
  sum(field: ContentfulPersonFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulPersonEdge {
  next: ContentfulPerson
  node: ContentfulPerson!
  previous: ContentfulPerson
}

type ContentfulPersonGroupConnection {
  distinct(field: ContentfulPersonFieldsEnum!): [String!]!
  edges: [ContentfulPersonEdge!]!
  field: String!
  fieldValue: String
  group(
    field: ContentfulPersonFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulPersonGroupConnection!]!
  max(field: ContentfulPersonFieldsEnum!): Float
  min(field: ContentfulPersonFieldsEnum!): Float
  nodes: [ContentfulPerson!]!
  pageInfo: PageInfo!
  sum(field: ContentfulPersonFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulPersonSys {
  contentType: ContentfulPersonSysContentType
  revision: Int
  type: String
}

type ContentfulPersonSysContentType {
  sys: ContentfulPersonSysContentTypeSys
}

type ContentfulPersonSysContentTypeSys {
  id: String
  linkType: String
  type: String
}

type ContentfulRole implements ContentfulEntry & ContentfulReference & Node {
  children: [Node!]!
  contentful_id: String!
  id: ID!
  internal: Internal!
  node_locale: String!
  parent: Node
}

type ContentfulRoleConnection {
  distinct(field: ContentfulRoleFieldsEnum!): [String!]!
  edges: [ContentfulRoleEdge!]!
  group(
    field: ContentfulRoleFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulRoleGroupConnection!]!
  max(field: ContentfulRoleFieldsEnum!): Float
  min(field: ContentfulRoleFieldsEnum!): Float
  nodes: [ContentfulRole!]!
  pageInfo: PageInfo!
  sum(field: ContentfulRoleFieldsEnum!): Float
  totalCount: Int!
}

type ContentfulRoleEdge {
  next: ContentfulRole
  node: ContentfulRole!
  previous: ContentfulRole
}

type ContentfulRoleGroupConnection {
  distinct(field: ContentfulRoleFieldsEnum!): [String!]!
  edges: [ContentfulRoleEdge!]!
  field: String!
  fieldValue: String
  group(
    field: ContentfulRoleFieldsEnum!
    limit: Int
    skip: Int
  ): [ContentfulRoleGroupConnection!]!
  max(field: ContentfulRoleFieldsEnum!): Float
  min(field: ContentfulRoleFieldsEnum!): Float
  nodes: [ContentfulRole!]!
  pageInfo: PageInfo!
  sum(field: ContentfulRoleFieldsEnum!): Float
  totalCount: Int!
}

type Directory implements Node {
  absolutePath: String!
  accessTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  changeTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  children: [Node!]!
  ctime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type DirectoryConnection {
  distinct(field: DirectoryFieldsEnum!): [String!]!
  edges: [DirectoryEdge!]!
  group(
    field: DirectoryFieldsEnum!
    limit: Int
    skip: Int
  ): [DirectoryGroupConnection!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  nodes: [Directory!]!
  pageInfo: PageInfo!
  sum(field: DirectoryFieldsEnum!): Float
  totalCount: Int!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

type DirectoryGroupConnection {
  distinct(field: DirectoryFieldsEnum!): [String!]!
  edges: [DirectoryEdge!]!
  field: String!
  fieldValue: String
  group(
    field: DirectoryFieldsEnum!
    limit: Int
    skip: Int
  ): [DirectoryGroupConnection!]!
  max(field: DirectoryFieldsEnum!): Float
  min(field: DirectoryFieldsEnum!): Float
  nodes: [Directory!]!
  pageInfo: PageInfo!
  sum(field: DirectoryFieldsEnum!): Float
  totalCount: Int!
}

type File implements Node {
  absolutePath: String!
  accessTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  changeTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  "Returns the first child node of type ImageSharp or null if there are no children of given type on this node"
  childImageSharp: ImageSharp
  children: [Node!]!
  "Returns all children nodes filtered by type ImageSharp"
  childrenImageSharp: [ImageSharp]
  ctime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  "Copy file to static directory and return public url to it"
  publicURL: String
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type FileConnection {
  distinct(field: FileFieldsEnum!): [String!]!
  edges: [FileEdge!]!
  group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  nodes: [File!]!
  pageInfo: PageInfo!
  sum(field: FileFieldsEnum!): Float
  totalCount: Int!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

type FileGroupConnection {
  distinct(field: FileFieldsEnum!): [String!]!
  edges: [FileEdge!]!
  field: String!
  fieldValue: String
  group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
  max(field: FileFieldsEnum!): Float
  min(field: FileFieldsEnum!): Float
  nodes: [File!]!
  pageInfo: PageInfo!
  sum(field: FileFieldsEnum!): Float
  totalCount: Int!
}

type ImageSharp implements Node {
  children: [Node!]!
  fixed(
    background: String = "rgba(0,0,0,1)"
    base64Width: Int
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    height: Int
    jpegProgressive: Boolean = true
    jpegQuality: Int
    pngCompressionSpeed: Int = 4
    pngQuality: Int
    quality: Int
    rotate: Int = 0
    toFormat: ImageFormat = AUTO
    toFormatBase64: ImageFormat = AUTO
    traceSVG: Potrace
    trim: Float = 0.0
    webpQuality: Int
    width: Int
  ): ImageSharpFixed
  fluid(
    background: String = "rgba(0,0,0,1)"
    base64Width: Int
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    jpegQuality: Int
    maxHeight: Int
    maxWidth: Int
    pngCompressionSpeed: Int = 4
    pngQuality: Int
    quality: Int
    rotate: Int = 0
    sizes: String = ""
    "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
    srcSetBreakpoints: [Int] = []
    toFormat: ImageFormat = AUTO
    toFormatBase64: ImageFormat = AUTO
    traceSVG: Potrace
    trim: Float = 0.0
    webpQuality: Int
  ): ImageSharpFluid
  gatsbyImageData(
    """
    If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
    If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    """
    aspectRatio: Float
    "Options to pass to sharp when generating AVIF images."
    avifOptions: AVIFOptions
    "Background color applied to the wrapper. Also passed to sharp to use as a background when \"letterboxing\" an image to another aspect ratio."
    backgroundColor: String
    "Options for the low-resolution placeholder image. Set placeholder to \"BLURRED\" to use this"
    blurredOptions: BlurredOptions
    """
    Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
    based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
    It will never generate any images larger than the source.
    """
    breakpoints: [Int]
    """
    The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
    The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
    not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
    both PNG and JPG is not supported and will be ignored.
    """
    formats: [ImageFormat]
    """
    The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
    The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
    matching the aspect ratio of the source image.
    """
    height: Int
    "Options to pass to sharp when generating JPG images."
    jpgOptions: JPGOptions
    """
    The layout for the image.
    FIXED: A static image sized, that does not resize according to the screen width
    FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
    CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    """
    layout: ImageLayout = CONSTRAINED
    """
    A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
    Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
    and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
    """
    outputPixelDensities: [Float]
    """
    Format of generated placeholder image, displayed while the main image loads.
    BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    TRACED_SVG: a low-resolution traced SVG of the image.
    NONE: no placeholder. Set "background" to use a fixed background color.
    """
    placeholder: ImagePlaceholder
    "Options to pass to sharp when generating PNG images."
    pngOptions: PNGOptions
    "The default quality. This is overridden by any format-specific options"
    quality: Int
    """
    The "sizes" property, passed to the img tag. This describes the display size of the image.
    This does not affect the generated images, but is used by the browser to decide which images to download.
    You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
    does not actually span the full width of the screen, in which case you should pass the correct size here.
    """
    sizes: String
    "Options for traced placeholder SVGs. You also should set placeholder to \"TRACED_SVG\"."
    tracedSVGOptions: Potrace
    "Options to pass to sharp to control cropping and other image manipulations."
    transformOptions: TransformOptions
    "Options to pass to sharp when generating WebP images."
    webpOptions: WebPOptions
    """
    The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
    Ignored if layout = FLUID.
    """
    width: Int
  ): JSON!
  id: ID!
  internal: Internal!
  original: ImageSharpOriginal
  parent: Node
  resize(
    background: String = "rgba(0,0,0,1)"
    base64: Boolean = false
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    height: Int
    jpegProgressive: Boolean = true
    jpegQuality: Int
    pngCompressionLevel: Int = 9
    pngCompressionSpeed: Int = 4
    pngQuality: Int
    quality: Int
    rotate: Int = 0
    toFormat: ImageFormat = AUTO
    traceSVG: Potrace
    trim: Float = 0.0
    webpQuality: Int
    width: Int
  ): ImageSharpResize
}

type ImageSharpConnection {
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  edges: [ImageSharpEdge!]!
  group(
    field: ImageSharpFieldsEnum!
    limit: Int
    skip: Int
  ): [ImageSharpGroupConnection!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  sum(field: ImageSharpFieldsEnum!): Float
  totalCount: Int!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

type ImageSharpFixed {
  aspectRatio: Float
  base64: String
  height: Float!
  originalName: String
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
  width: Float!
}

type ImageSharpFluid {
  aspectRatio: Float!
  base64: String
  originalImg: String
  originalName: String
  presentationHeight: Int!
  presentationWidth: Int!
  sizes: String!
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
}

type ImageSharpGroupConnection {
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  edges: [ImageSharpEdge!]!
  field: String!
  fieldValue: String
  group(
    field: ImageSharpFieldsEnum!
    limit: Int
    skip: Int
  ): [ImageSharpGroupConnection!]!
  max(field: ImageSharpFieldsEnum!): Float
  min(field: ImageSharpFieldsEnum!): Float
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  sum(field: ImageSharpFieldsEnum!): Float
  totalCount: Int!
}

type ImageSharpOriginal {
  height: Float
  src: String
  width: Float
}

type ImageSharpResize {
  aspectRatio: Float
  height: Int
  originalName: String
  src: String
  tracedSVG: String
  width: Int
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

type PageInfo {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

type Query {
  allContentfulAsset(
    filter: ContentfulAssetFilterInput
    limit: Int
    skip: Int
    sort: ContentfulAssetSortInput
  ): ContentfulAssetConnection!
  allContentfulContentType(
    filter: ContentfulContentTypeFilterInput
    limit: Int
    skip: Int
    sort: ContentfulContentTypeSortInput
  ): ContentfulContentTypeConnection!
  allContentfulEntry(
    filter: ContentfulEntryFilterInput
    limit: Int
    skip: Int
    sort: ContentfulEntrySortInput
  ): ContentfulEntryConnection!
  allContentfulFilm(
    filter: ContentfulFilmFilterInput
    limit: Int
    skip: Int
    sort: ContentfulFilmSortInput
  ): ContentfulFilmConnection!
  allContentfulFilmCreditsTextNode(
    filter: contentfulFilmCreditsTextNodeFilterInput
    limit: Int
    skip: Int
    sort: contentfulFilmCreditsTextNodeSortInput
  ): contentfulFilmCreditsTextNodeConnection!
  allContentfulFilmDescriptionTextNode(
    filter: contentfulFilmDescriptionTextNodeFilterInput
    limit: Int
    skip: Int
    sort: contentfulFilmDescriptionTextNodeSortInput
  ): contentfulFilmDescriptionTextNodeConnection!
  allContentfulLink(
    filter: ContentfulLinkFilterInput
    limit: Int
    skip: Int
    sort: ContentfulLinkSortInput
  ): ContentfulLinkConnection!
  allContentfulPage(
    filter: ContentfulPageFilterInput
    limit: Int
    skip: Int
    sort: ContentfulPageSortInput
  ): ContentfulPageConnection!
  allContentfulPerson(
    filter: ContentfulPersonFilterInput
    limit: Int
    skip: Int
    sort: ContentfulPersonSortInput
  ): ContentfulPersonConnection!
  allContentfulRole(
    filter: ContentfulRoleFilterInput
    limit: Int
    skip: Int
    sort: ContentfulRoleSortInput
  ): ContentfulRoleConnection!
  allDirectory(
    filter: DirectoryFilterInput
    limit: Int
    skip: Int
    sort: DirectorySortInput
  ): DirectoryConnection!
  allFile(
    filter: FileFilterInput
    limit: Int
    skip: Int
    sort: FileSortInput
  ): FileConnection!
  allImageSharp(
    filter: ImageSharpFilterInput
    limit: Int
    skip: Int
    sort: ImageSharpSortInput
  ): ImageSharpConnection!
  allSite(
    filter: SiteFilterInput
    limit: Int
    skip: Int
    sort: SiteSortInput
  ): SiteConnection!
  allSiteBuildMetadata(
    filter: SiteBuildMetadataFilterInput
    limit: Int
    skip: Int
    sort: SiteBuildMetadataSortInput
  ): SiteBuildMetadataConnection!
  allSiteFunction(
    filter: SiteFunctionFilterInput
    limit: Int
    skip: Int
    sort: SiteFunctionSortInput
  ): SiteFunctionConnection!
  allSitePage(
    filter: SitePageFilterInput
    limit: Int
    skip: Int
    sort: SitePageSortInput
  ): SitePageConnection!
  allSitePlugin(
    filter: SitePluginFilterInput
    limit: Int
    skip: Int
    sort: SitePluginSortInput
  ): SitePluginConnection!
  contentfulAsset(
    children: NodeFilterListInput
    contentful_id: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    description: StringQueryOperatorInput
    file: ContentfulAssetFileFilterInput
    gatsbyImageData: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
    spaceId: StringQueryOperatorInput
    sys: ContentfulAssetSysFilterInput
    title: StringQueryOperatorInput
    updatedAt: DateQueryOperatorInput
  ): ContentfulAsset
  contentfulContentType(
    children: NodeFilterListInput
    description: StringQueryOperatorInput
    displayField: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    parent: NodeFilterInput
    sys: ContentfulContentTypeSysFilterInput
  ): ContentfulContentType
  contentfulEntry(
    children: NodeFilterListInput
    contentful_id: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
  ): ContentfulEntry
  contentfulFilm(
    animPreview: ContentfulAssetFilterInput
    childContentfulFilmCreditsTextNode: contentfulFilmCreditsTextNodeFilterInput
    childContentfulFilmDescriptionTextNode: contentfulFilmDescriptionTextNodeFilterInput
    children: NodeFilterListInput
    childrenContentfulFilmCreditsTextNode: contentfulFilmCreditsTextNodeFilterListInput
    childrenContentfulFilmDescriptionTextNode: contentfulFilmDescriptionTextNodeFilterListInput
    contentful_id: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    credits: contentfulFilmCreditsTextNodeFilterInput
    description: contentfulFilmDescriptionTextNodeFilterInput
    filmmaker: ContentfulPersonFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
    spaceId: StringQueryOperatorInput
    stillPreview: ContentfulAssetFilterInput
    sys: ContentfulFilmSysFilterInput
    title: StringQueryOperatorInput
    updatedAt: DateQueryOperatorInput
    videoSrc: StringQueryOperatorInput
  ): ContentfulFilm
  contentfulFilmCreditsTextNode(
    children: NodeFilterListInput
    credits: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    sys: contentfulFilmCreditsTextNodeSysFilterInput
  ): contentfulFilmCreditsTextNode
  contentfulFilmDescriptionTextNode(
    children: NodeFilterListInput
    description: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    sys: contentfulFilmDescriptionTextNodeSysFilterInput
  ): contentfulFilmDescriptionTextNode
  contentfulLink(
    children: NodeFilterListInput
    contentful_id: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
  ): ContentfulLink
  contentfulPage(
    children: NodeFilterListInput
    contentful_id: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
  ): ContentfulPage
  contentfulPerson(
    bio: ContentfulPersonBioFilterInput
    children: NodeFilterListInput
    contentful_id: StringQueryOperatorInput
    createdAt: DateQueryOperatorInput
    film: ContentfulFilmFilterListInput
    firstName: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    lastName: StringQueryOperatorInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
    pronouns: StringQueryOperatorInput
    spaceId: StringQueryOperatorInput
    sys: ContentfulPersonSysFilterInput
    updatedAt: DateQueryOperatorInput
  ): ContentfulPerson
  contentfulRole(
    children: NodeFilterListInput
    contentful_id: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    node_locale: StringQueryOperatorInput
    parent: NodeFilterInput
  ): ContentfulRole
  directory(
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    changeTime: DateQueryOperatorInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
  ): Directory
  file(
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    childImageSharp: ImageSharpFilterInput
    children: NodeFilterListInput
    childrenImageSharp: ImageSharpFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    publicURL: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
  ): File
  imageSharp(
    children: NodeFilterListInput
    fixed: ImageSharpFixedFilterInput
    fluid: ImageSharpFluidFilterInput
    gatsbyImageData: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    original: ImageSharpOriginalFilterInput
    parent: NodeFilterInput
    resize: ImageSharpResizeFilterInput
  ): ImageSharp
  site(
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    host: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    jsxRuntime: StringQueryOperatorInput
    parent: NodeFilterInput
    pathPrefix: StringQueryOperatorInput
    polyfill: BooleanQueryOperatorInput
    port: IntQueryOperatorInput
    siteMetadata: SiteSiteMetadataFilterInput
  ): Site
  siteBuildMetadata(
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
  ): SiteBuildMetadata
  siteFunction(
    absoluteCompiledFilePath: StringQueryOperatorInput
    children: NodeFilterListInput
    functionRoute: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    matchPath: StringQueryOperatorInput
    originalAbsoluteFilePath: StringQueryOperatorInput
    originalRelativeFilePath: StringQueryOperatorInput
    parent: NodeFilterInput
    pluginName: StringQueryOperatorInput
    relativeCompiledFilePath: StringQueryOperatorInput
  ): SiteFunction
  sitePage(
    children: NodeFilterListInput
    component: StringQueryOperatorInput
    componentChunkName: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    internalComponentName: StringQueryOperatorInput
    matchPath: StringQueryOperatorInput
    pageContext: JSONQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    pluginCreator: SitePluginFilterInput
  ): SitePage
  sitePlugin(
    browserAPIs: StringQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    nodeAPIs: StringQueryOperatorInput
    packageJson: JSONQueryOperatorInput
    parent: NodeFilterInput
    pluginFilepath: StringQueryOperatorInput
    pluginOptions: JSONQueryOperatorInput
    resolve: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    version: StringQueryOperatorInput
  ): SitePlugin
}

type Site implements Node {
  buildTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  host: String
  id: ID!
  internal: Internal!
  jsxRuntime: String
  parent: Node
  pathPrefix: String
  polyfill: Boolean
  port: Int
  siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
  buildTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

type SiteBuildMetadataConnection {
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  edges: [SiteBuildMetadataEdge!]!
  group(
    field: SiteBuildMetadataFieldsEnum!
    limit: Int
    skip: Int
  ): [SiteBuildMetadataGroupConnection!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  totalCount: Int!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  edges: [SiteBuildMetadataEdge!]!
  field: String!
  fieldValue: String
  group(
    field: SiteBuildMetadataFieldsEnum!
    limit: Int
    skip: Int
  ): [SiteBuildMetadataGroupConnection!]!
  max(field: SiteBuildMetadataFieldsEnum!): Float
  min(field: SiteBuildMetadataFieldsEnum!): Float
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  sum(field: SiteBuildMetadataFieldsEnum!): Float
  totalCount: Int!
}

type SiteConnection {
  distinct(field: SiteFieldsEnum!): [String!]!
  edges: [SiteEdge!]!
  group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  nodes: [Site!]!
  pageInfo: PageInfo!
  sum(field: SiteFieldsEnum!): Float
  totalCount: Int!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

type SiteFunction implements Node {
  absoluteCompiledFilePath: String!
  children: [Node!]!
  functionRoute: String!
  id: ID!
  internal: Internal!
  matchPath: String
  originalAbsoluteFilePath: String!
  originalRelativeFilePath: String!
  parent: Node
  pluginName: String!
  relativeCompiledFilePath: String!
}

type SiteFunctionConnection {
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  edges: [SiteFunctionEdge!]!
  group(
    field: SiteFunctionFieldsEnum!
    limit: Int
    skip: Int
  ): [SiteFunctionGroupConnection!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  sum(field: SiteFunctionFieldsEnum!): Float
  totalCount: Int!
}

type SiteFunctionEdge {
  next: SiteFunction
  node: SiteFunction!
  previous: SiteFunction
}

type SiteFunctionGroupConnection {
  distinct(field: SiteFunctionFieldsEnum!): [String!]!
  edges: [SiteFunctionEdge!]!
  field: String!
  fieldValue: String
  group(
    field: SiteFunctionFieldsEnum!
    limit: Int
    skip: Int
  ): [SiteFunctionGroupConnection!]!
  max(field: SiteFunctionFieldsEnum!): Float
  min(field: SiteFunctionFieldsEnum!): Float
  nodes: [SiteFunction!]!
  pageInfo: PageInfo!
  sum(field: SiteFunctionFieldsEnum!): Float
  totalCount: Int!
}

type SiteGroupConnection {
  distinct(field: SiteFieldsEnum!): [String!]!
  edges: [SiteEdge!]!
  field: String!
  fieldValue: String
  group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
  max(field: SiteFieldsEnum!): Float
  min(field: SiteFieldsEnum!): Float
  nodes: [Site!]!
  pageInfo: PageInfo!
  sum(field: SiteFieldsEnum!): Float
  totalCount: Int!
}

type SitePage implements Node {
  children: [Node!]!
  component: String!
  componentChunkName: String!
  id: ID!
  internal: Internal!
  internalComponentName: String!
  matchPath: String
  pageContext: JSON
  parent: Node
  path: String!
  pluginCreator: SitePlugin
}

type SitePageConnection {
  distinct(field: SitePageFieldsEnum!): [String!]!
  edges: [SitePageEdge!]!
  group(
    field: SitePageFieldsEnum!
    limit: Int
    skip: Int
  ): [SitePageGroupConnection!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  sum(field: SitePageFieldsEnum!): Float
  totalCount: Int!
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

type SitePageGroupConnection {
  distinct(field: SitePageFieldsEnum!): [String!]!
  edges: [SitePageEdge!]!
  field: String!
  fieldValue: String
  group(
    field: SitePageFieldsEnum!
    limit: Int
    skip: Int
  ): [SitePageGroupConnection!]!
  max(field: SitePageFieldsEnum!): Float
  min(field: SitePageFieldsEnum!): Float
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  sum(field: SitePageFieldsEnum!): Float
  totalCount: Int!
}

type SitePlugin implements Node {
  browserAPIs: [String]
  children: [Node!]!
  id: ID!
  internal: Internal!
  name: String
  nodeAPIs: [String]
  packageJson: JSON
  parent: Node
  pluginFilepath: String
  pluginOptions: JSON
  resolve: String
  ssrAPIs: [String]
  version: String
}

type SitePluginConnection {
  distinct(field: SitePluginFieldsEnum!): [String!]!
  edges: [SitePluginEdge!]!
  group(
    field: SitePluginFieldsEnum!
    limit: Int
    skip: Int
  ): [SitePluginGroupConnection!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  sum(field: SitePluginFieldsEnum!): Float
  totalCount: Int!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

type SitePluginGroupConnection {
  distinct(field: SitePluginFieldsEnum!): [String!]!
  edges: [SitePluginEdge!]!
  field: String!
  fieldValue: String
  group(
    field: SitePluginFieldsEnum!
    limit: Int
    skip: Int
  ): [SitePluginGroupConnection!]!
  max(field: SitePluginFieldsEnum!): Float
  min(field: SitePluginFieldsEnum!): Float
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  sum(field: SitePluginFieldsEnum!): Float
  totalCount: Int!
}

type SiteSiteMetadata {
  description: String
  siteUrl: String
  title: String
}

type contentfulFilmCreditsTextNode implements Node {
  children: [Node!]!
  credits: String
  id: ID!
  internal: Internal!
  parent: Node
  sys: contentfulFilmCreditsTextNodeSys
}

type contentfulFilmCreditsTextNodeConnection {
  distinct(field: contentfulFilmCreditsTextNodeFieldsEnum!): [String!]!
  edges: [contentfulFilmCreditsTextNodeEdge!]!
  group(
    field: contentfulFilmCreditsTextNodeFieldsEnum!
    limit: Int
    skip: Int
  ): [contentfulFilmCreditsTextNodeGroupConnection!]!
  max(field: contentfulFilmCreditsTextNodeFieldsEnum!): Float
  min(field: contentfulFilmCreditsTextNodeFieldsEnum!): Float
  nodes: [contentfulFilmCreditsTextNode!]!
  pageInfo: PageInfo!
  sum(field: contentfulFilmCreditsTextNodeFieldsEnum!): Float
  totalCount: Int!
}

type contentfulFilmCreditsTextNodeEdge {
  next: contentfulFilmCreditsTextNode
  node: contentfulFilmCreditsTextNode!
  previous: contentfulFilmCreditsTextNode
}

type contentfulFilmCreditsTextNodeGroupConnection {
  distinct(field: contentfulFilmCreditsTextNodeFieldsEnum!): [String!]!
  edges: [contentfulFilmCreditsTextNodeEdge!]!
  field: String!
  fieldValue: String
  group(
    field: contentfulFilmCreditsTextNodeFieldsEnum!
    limit: Int
    skip: Int
  ): [contentfulFilmCreditsTextNodeGroupConnection!]!
  max(field: contentfulFilmCreditsTextNodeFieldsEnum!): Float
  min(field: contentfulFilmCreditsTextNodeFieldsEnum!): Float
  nodes: [contentfulFilmCreditsTextNode!]!
  pageInfo: PageInfo!
  sum(field: contentfulFilmCreditsTextNodeFieldsEnum!): Float
  totalCount: Int!
}

type contentfulFilmCreditsTextNodeSys {
  type: String
}

type contentfulFilmDescriptionTextNode implements Node {
  children: [Node!]!
  description: String
  id: ID!
  internal: Internal!
  parent: Node
  sys: contentfulFilmDescriptionTextNodeSys
}

type contentfulFilmDescriptionTextNodeConnection {
  distinct(field: contentfulFilmDescriptionTextNodeFieldsEnum!): [String!]!
  edges: [contentfulFilmDescriptionTextNodeEdge!]!
  group(
    field: contentfulFilmDescriptionTextNodeFieldsEnum!
    limit: Int
    skip: Int
  ): [contentfulFilmDescriptionTextNodeGroupConnection!]!
  max(field: contentfulFilmDescriptionTextNodeFieldsEnum!): Float
  min(field: contentfulFilmDescriptionTextNodeFieldsEnum!): Float
  nodes: [contentfulFilmDescriptionTextNode!]!
  pageInfo: PageInfo!
  sum(field: contentfulFilmDescriptionTextNodeFieldsEnum!): Float
  totalCount: Int!
}

type contentfulFilmDescriptionTextNodeEdge {
  next: contentfulFilmDescriptionTextNode
  node: contentfulFilmDescriptionTextNode!
  previous: contentfulFilmDescriptionTextNode
}

type contentfulFilmDescriptionTextNodeGroupConnection {
  distinct(field: contentfulFilmDescriptionTextNodeFieldsEnum!): [String!]!
  edges: [contentfulFilmDescriptionTextNodeEdge!]!
  field: String!
  fieldValue: String
  group(
    field: contentfulFilmDescriptionTextNodeFieldsEnum!
    limit: Int
    skip: Int
  ): [contentfulFilmDescriptionTextNodeGroupConnection!]!
  max(field: contentfulFilmDescriptionTextNodeFieldsEnum!): Float
  min(field: contentfulFilmDescriptionTextNodeFieldsEnum!): Float
  nodes: [contentfulFilmDescriptionTextNode!]!
  pageInfo: PageInfo!
  sum(field: contentfulFilmDescriptionTextNodeFieldsEnum!): Float
  totalCount: Int!
}

type contentfulFilmDescriptionTextNodeSys {
  type: String
}

enum ContentfulAssetFieldsEnum {
  children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  contentful_id
  createdAt
  description
  file___contentType
  file___details___image___height
  file___details___image___width
  file___details___size
  file___fileName
  file___url
  gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  id
  internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  node_locale
  parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  spaceId
  sys___revision
  sys___type
  title
  updatedAt
}

enum ContentfulContentTypeFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  description
  displayField
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  sys___type
}

enum ContentfulEntryFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  contentful_id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  node_locale
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

enum ContentfulFilmFieldsEnum {
  animPreview___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___children___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___children___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___children___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___children___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___children___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___children___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___children___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___children___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___children___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___children___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___children___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___children___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___contentful_id
  animPreview___createdAt
  animPreview___description
  animPreview___file___contentType
  animPreview___file___details___size
  animPreview___file___fileName
  animPreview___file___url
  animPreview___gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___id
  animPreview___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___node_locale
  animPreview___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___parent___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___parent___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___parent___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___parent___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___parent___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___parent___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___parent___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___parent___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___parent___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___parent___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___parent___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___parent___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  animPreview___spaceId
  animPreview___sys___revision
  animPreview___sys___type
  animPreview___title
  animPreview___updatedAt
  childContentfulFilmCreditsTextNode___children
  childContentfulFilmCreditsTextNode___children___children
  childContentfulFilmCreditsTextNode___children___children___children
  childContentfulFilmCreditsTextNode___children___children___id
  childContentfulFilmCreditsTextNode___children___id
  childContentfulFilmCreditsTextNode___children___internal___content
  childContentfulFilmCreditsTextNode___children___internal___contentDigest
  childContentfulFilmCreditsTextNode___children___internal___description
  childContentfulFilmCreditsTextNode___children___internal___fieldOwners
  childContentfulFilmCreditsTextNode___children___internal___ignoreType
  childContentfulFilmCreditsTextNode___children___internal___mediaType
  childContentfulFilmCreditsTextNode___children___internal___owner
  childContentfulFilmCreditsTextNode___children___internal___type
  childContentfulFilmCreditsTextNode___children___parent___children
  childContentfulFilmCreditsTextNode___children___parent___id
  childContentfulFilmCreditsTextNode___credits
  childContentfulFilmCreditsTextNode___id
  childContentfulFilmCreditsTextNode___internal___content
  childContentfulFilmCreditsTextNode___internal___contentDigest
  childContentfulFilmCreditsTextNode___internal___description
  childContentfulFilmCreditsTextNode___internal___fieldOwners
  childContentfulFilmCreditsTextNode___internal___ignoreType
  childContentfulFilmCreditsTextNode___internal___mediaType
  childContentfulFilmCreditsTextNode___internal___owner
  childContentfulFilmCreditsTextNode___internal___type
  childContentfulFilmCreditsTextNode___parent___children
  childContentfulFilmCreditsTextNode___parent___children___children
  childContentfulFilmCreditsTextNode___parent___children___id
  childContentfulFilmCreditsTextNode___parent___id
  childContentfulFilmCreditsTextNode___parent___internal___content
  childContentfulFilmCreditsTextNode___parent___internal___contentDigest
  childContentfulFilmCreditsTextNode___parent___internal___description
  childContentfulFilmCreditsTextNode___parent___internal___fieldOwners
  childContentfulFilmCreditsTextNode___parent___internal___ignoreType
  childContentfulFilmCreditsTextNode___parent___internal___mediaType
  childContentfulFilmCreditsTextNode___parent___internal___owner
  childContentfulFilmCreditsTextNode___parent___internal___type
  childContentfulFilmCreditsTextNode___parent___parent___children
  childContentfulFilmCreditsTextNode___parent___parent___id
  childContentfulFilmCreditsTextNode___sys___type
  childContentfulFilmDescriptionTextNode___children
  childContentfulFilmDescriptionTextNode___children___children
  childContentfulFilmDescriptionTextNode___children___children___children
  childContentfulFilmDescriptionTextNode___children___children___id
  childContentfulFilmDescriptionTextNode___children___id
  childContentfulFilmDescriptionTextNode___children___internal___content
  childContentfulFilmDescriptionTextNode___children___internal___contentDigest
  childContentfulFilmDescriptionTextNode___children___internal___description
  childContentfulFilmDescriptionTextNode___children___internal___fieldOwners
  childContentfulFilmDescriptionTextNode___children___internal___ignoreType
  childContentfulFilmDescriptionTextNode___children___internal___mediaType
  childContentfulFilmDescriptionTextNode___children___internal___owner
  childContentfulFilmDescriptionTextNode___children___internal___type
  childContentfulFilmDescriptionTextNode___children___parent___children
  childContentfulFilmDescriptionTextNode___children___parent___id
  childContentfulFilmDescriptionTextNode___description
  childContentfulFilmDescriptionTextNode___id
  childContentfulFilmDescriptionTextNode___internal___content
  childContentfulFilmDescriptionTextNode___internal___contentDigest
  childContentfulFilmDescriptionTextNode___internal___description
  childContentfulFilmDescriptionTextNode___internal___fieldOwners
  childContentfulFilmDescriptionTextNode___internal___ignoreType
  childContentfulFilmDescriptionTextNode___internal___mediaType
  childContentfulFilmDescriptionTextNode___internal___owner
  childContentfulFilmDescriptionTextNode___internal___type
  childContentfulFilmDescriptionTextNode___parent___children
  childContentfulFilmDescriptionTextNode___parent___children___children
  childContentfulFilmDescriptionTextNode___parent___children___id
  childContentfulFilmDescriptionTextNode___parent___id
  childContentfulFilmDescriptionTextNode___parent___internal___content
  childContentfulFilmDescriptionTextNode___parent___internal___contentDigest
  childContentfulFilmDescriptionTextNode___parent___internal___description
  childContentfulFilmDescriptionTextNode___parent___internal___fieldOwners
  childContentfulFilmDescriptionTextNode___parent___internal___ignoreType
  childContentfulFilmDescriptionTextNode___parent___internal___mediaType
  childContentfulFilmDescriptionTextNode___parent___internal___owner
  childContentfulFilmDescriptionTextNode___parent___internal___type
  childContentfulFilmDescriptionTextNode___parent___parent___children
  childContentfulFilmDescriptionTextNode___parent___parent___id
  childContentfulFilmDescriptionTextNode___sys___type
  children
  childrenContentfulFilmCreditsTextNode
  childrenContentfulFilmCreditsTextNode___children
  childrenContentfulFilmCreditsTextNode___children___children
  childrenContentfulFilmCreditsTextNode___children___children___children
  childrenContentfulFilmCreditsTextNode___children___children___id
  childrenContentfulFilmCreditsTextNode___children___id
  childrenContentfulFilmCreditsTextNode___children___internal___content
  childrenContentfulFilmCreditsTextNode___children___internal___contentDigest
  childrenContentfulFilmCreditsTextNode___children___internal___description
  childrenContentfulFilmCreditsTextNode___children___internal___fieldOwners
  childrenContentfulFilmCreditsTextNode___children___internal___ignoreType
  childrenContentfulFilmCreditsTextNode___children___internal___mediaType
  childrenContentfulFilmCreditsTextNode___children___internal___owner
  childrenContentfulFilmCreditsTextNode___children___internal___type
  childrenContentfulFilmCreditsTextNode___children___parent___children
  childrenContentfulFilmCreditsTextNode___children___parent___id
  childrenContentfulFilmCreditsTextNode___credits
  childrenContentfulFilmCreditsTextNode___id
  childrenContentfulFilmCreditsTextNode___internal___content
  childrenContentfulFilmCreditsTextNode___internal___contentDigest
  childrenContentfulFilmCreditsTextNode___internal___description
  childrenContentfulFilmCreditsTextNode___internal___fieldOwners
  childrenContentfulFilmCreditsTextNode___internal___ignoreType
  childrenContentfulFilmCreditsTextNode___internal___mediaType
  childrenContentfulFilmCreditsTextNode___internal___owner
  childrenContentfulFilmCreditsTextNode___internal___type
  childrenContentfulFilmCreditsTextNode___parent___children
  childrenContentfulFilmCreditsTextNode___parent___children___children
  childrenContentfulFilmCreditsTextNode___parent___children___id
  childrenContentfulFilmCreditsTextNode___parent___id
  childrenContentfulFilmCreditsTextNode___parent___internal___content
  childrenContentfulFilmCreditsTextNode___parent___internal___contentDigest
  childrenContentfulFilmCreditsTextNode___parent___internal___description
  childrenContentfulFilmCreditsTextNode___parent___internal___fieldOwners
  childrenContentfulFilmCreditsTextNode___parent___internal___ignoreType
  childrenContentfulFilmCreditsTextNode___parent___internal___mediaType
  childrenContentfulFilmCreditsTextNode___parent___internal___owner
  childrenContentfulFilmCreditsTextNode___parent___internal___type
  childrenContentfulFilmCreditsTextNode___parent___parent___children
  childrenContentfulFilmCreditsTextNode___parent___parent___id
  childrenContentfulFilmCreditsTextNode___sys___type
  childrenContentfulFilmDescriptionTextNode
  childrenContentfulFilmDescriptionTextNode___children
  childrenContentfulFilmDescriptionTextNode___children___children
  childrenContentfulFilmDescriptionTextNode___children___children___children
  childrenContentfulFilmDescriptionTextNode___children___children___id
  childrenContentfulFilmDescriptionTextNode___children___id
  childrenContentfulFilmDescriptionTextNode___children___internal___content
  childrenContentfulFilmDescriptionTextNode___children___internal___contentDigest
  childrenContentfulFilmDescriptionTextNode___children___internal___description
  childrenContentfulFilmDescriptionTextNode___children___internal___fieldOwners
  childrenContentfulFilmDescriptionTextNode___children___internal___ignoreType
  childrenContentfulFilmDescriptionTextNode___children___internal___mediaType
  childrenContentfulFilmDescriptionTextNode___children___internal___owner
  childrenContentfulFilmDescriptionTextNode___children___internal___type
  childrenContentfulFilmDescriptionTextNode___children___parent___children
  childrenContentfulFilmDescriptionTextNode___children___parent___id
  childrenContentfulFilmDescriptionTextNode___description
  childrenContentfulFilmDescriptionTextNode___id
  childrenContentfulFilmDescriptionTextNode___internal___content
  childrenContentfulFilmDescriptionTextNode___internal___contentDigest
  childrenContentfulFilmDescriptionTextNode___internal___description
  childrenContentfulFilmDescriptionTextNode___internal___fieldOwners
  childrenContentfulFilmDescriptionTextNode___internal___ignoreType
  childrenContentfulFilmDescriptionTextNode___internal___mediaType
  childrenContentfulFilmDescriptionTextNode___internal___owner
  childrenContentfulFilmDescriptionTextNode___internal___type
  childrenContentfulFilmDescriptionTextNode___parent___children
  childrenContentfulFilmDescriptionTextNode___parent___children___children
  childrenContentfulFilmDescriptionTextNode___parent___children___id
  childrenContentfulFilmDescriptionTextNode___parent___id
  childrenContentfulFilmDescriptionTextNode___parent___internal___content
  childrenContentfulFilmDescriptionTextNode___parent___internal___contentDigest
  childrenContentfulFilmDescriptionTextNode___parent___internal___description
  childrenContentfulFilmDescriptionTextNode___parent___internal___fieldOwners
  childrenContentfulFilmDescriptionTextNode___parent___internal___ignoreType
  childrenContentfulFilmDescriptionTextNode___parent___internal___mediaType
  childrenContentfulFilmDescriptionTextNode___parent___internal___owner
  childrenContentfulFilmDescriptionTextNode___parent___internal___type
  childrenContentfulFilmDescriptionTextNode___parent___parent___children
  childrenContentfulFilmDescriptionTextNode___parent___parent___id
  childrenContentfulFilmDescriptionTextNode___sys___type
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  contentful_id
  createdAt
  credits___children
  credits___children___children
  credits___children___children___children
  credits___children___children___id
  credits___children___id
  credits___children___internal___content
  credits___children___internal___contentDigest
  credits___children___internal___description
  credits___children___internal___fieldOwners
  credits___children___internal___ignoreType
  credits___children___internal___mediaType
  credits___children___internal___owner
  credits___children___internal___type
  credits___children___parent___children
  credits___children___parent___id
  credits___credits
  credits___id
  credits___internal___content
  credits___internal___contentDigest
  credits___internal___description
  credits___internal___fieldOwners
  credits___internal___ignoreType
  credits___internal___mediaType
  credits___internal___owner
  credits___internal___type
  credits___parent___children
  credits___parent___children___children
  credits___parent___children___id
  credits___parent___id
  credits___parent___internal___content
  credits___parent___internal___contentDigest
  credits___parent___internal___description
  credits___parent___internal___fieldOwners
  credits___parent___internal___ignoreType
  credits___parent___internal___mediaType
  credits___parent___internal___owner
  credits___parent___internal___type
  credits___parent___parent___children
  credits___parent___parent___id
  credits___sys___type
  description___children
  description___children___children
  description___children___children___children
  description___children___children___id
  description___children___id
  description___children___internal___content
  description___children___internal___contentDigest
  description___children___internal___description
  description___children___internal___fieldOwners
  description___children___internal___ignoreType
  description___children___internal___mediaType
  description___children___internal___owner
  description___children___internal___type
  description___children___parent___children
  description___children___parent___id
  description___description
  description___id
  description___internal___content
  description___internal___contentDigest
  description___internal___description
  description___internal___fieldOwners
  description___internal___ignoreType
  description___internal___mediaType
  description___internal___owner
  description___internal___type
  description___parent___children
  description___parent___children___children
  description___parent___children___id
  description___parent___id
  description___parent___internal___content
  description___parent___internal___contentDigest
  description___parent___internal___description
  description___parent___internal___fieldOwners
  description___parent___internal___ignoreType
  description___parent___internal___mediaType
  description___parent___internal___owner
  description___parent___internal___type
  description___parent___parent___children
  description___parent___parent___id
  description___sys___type
  filmmaker
  filmmaker___bio___raw
  filmmaker___children
  filmmaker___children___children
  filmmaker___children___children___children
  filmmaker___children___children___id
  filmmaker___children___id
  filmmaker___children___internal___content
  filmmaker___children___internal___contentDigest
  filmmaker___children___internal___description
  filmmaker___children___internal___fieldOwners
  filmmaker___children___internal___ignoreType
  filmmaker___children___internal___mediaType
  filmmaker___children___internal___owner
  filmmaker___children___internal___type
  filmmaker___children___parent___children
  filmmaker___children___parent___id
  filmmaker___contentful_id
  filmmaker___createdAt
  filmmaker___film
  filmmaker___film___animPreview___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  filmmaker___film___animPreview___contentful_id
  filmmaker___film___animPreview___createdAt
  filmmaker___film___animPreview___description
  filmmaker___film___animPreview___gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  filmmaker___film___animPreview___id
  filmmaker___film___animPreview___node_locale
  filmmaker___film___animPreview___spaceId
  filmmaker___film___animPreview___title
  filmmaker___film___animPreview___updatedAt
  filmmaker___film___childContentfulFilmCreditsTextNode___children
  filmmaker___film___childContentfulFilmCreditsTextNode___credits
  filmmaker___film___childContentfulFilmCreditsTextNode___id
  filmmaker___film___childContentfulFilmDescriptionTextNode___children
  filmmaker___film___childContentfulFilmDescriptionTextNode___description
  filmmaker___film___childContentfulFilmDescriptionTextNode___id
  filmmaker___film___children
  filmmaker___film___childrenContentfulFilmCreditsTextNode
  filmmaker___film___childrenContentfulFilmCreditsTextNode___children
  filmmaker___film___childrenContentfulFilmCreditsTextNode___credits
  filmmaker___film___childrenContentfulFilmCreditsTextNode___id
  filmmaker___film___childrenContentfulFilmDescriptionTextNode
  filmmaker___film___childrenContentfulFilmDescriptionTextNode___children
  filmmaker___film___childrenContentfulFilmDescriptionTextNode___description
  filmmaker___film___childrenContentfulFilmDescriptionTextNode___id
  filmmaker___film___children___children
  filmmaker___film___children___id
  filmmaker___film___contentful_id
  filmmaker___film___createdAt
  filmmaker___film___credits___children
  filmmaker___film___credits___credits
  filmmaker___film___credits___id
  filmmaker___film___description___children
  filmmaker___film___description___description
  filmmaker___film___description___id
  filmmaker___film___filmmaker
  filmmaker___film___filmmaker___children
  filmmaker___film___filmmaker___contentful_id
  filmmaker___film___filmmaker___createdAt
  filmmaker___film___filmmaker___film
  filmmaker___film___filmmaker___firstName
  filmmaker___film___filmmaker___id
  filmmaker___film___filmmaker___lastName
  filmmaker___film___filmmaker___node_locale
  filmmaker___film___filmmaker___pronouns
  filmmaker___film___filmmaker___spaceId
  filmmaker___film___filmmaker___updatedAt
  filmmaker___film___id
  filmmaker___film___internal___content
  filmmaker___film___internal___contentDigest
  filmmaker___film___internal___description
  filmmaker___film___internal___fieldOwners
  filmmaker___film___internal___ignoreType
  filmmaker___film___internal___mediaType
  filmmaker___film___internal___owner
  filmmaker___film___internal___type
  filmmaker___film___node_locale
  filmmaker___film___parent___children
  filmmaker___film___parent___id
  filmmaker___film___spaceId
  filmmaker___film___stillPreview___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  filmmaker___film___stillPreview___contentful_id
  filmmaker___film___stillPreview___createdAt
  filmmaker___film___stillPreview___description
  filmmaker___film___stillPreview___gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  filmmaker___film___stillPreview___id
  filmmaker___film___stillPreview___node_locale
  filmmaker___film___stillPreview___spaceId
  filmmaker___film___stillPreview___title
  filmmaker___film___stillPreview___updatedAt
  filmmaker___film___sys___revision
  filmmaker___film___sys___type
  filmmaker___film___title
  filmmaker___film___updatedAt
  filmmaker___film___videoSrc
  filmmaker___firstName
  filmmaker___id
  filmmaker___internal___content
  filmmaker___internal___contentDigest
  filmmaker___internal___description
  filmmaker___internal___fieldOwners
  filmmaker___internal___ignoreType
  filmmaker___internal___mediaType
  filmmaker___internal___owner
  filmmaker___internal___type
  filmmaker___lastName
  filmmaker___node_locale
  filmmaker___parent___children
  filmmaker___parent___children___children
  filmmaker___parent___children___id
  filmmaker___parent___id
  filmmaker___parent___internal___content
  filmmaker___parent___internal___contentDigest
  filmmaker___parent___internal___description
  filmmaker___parent___internal___fieldOwners
  filmmaker___parent___internal___ignoreType
  filmmaker___parent___internal___mediaType
  filmmaker___parent___internal___owner
  filmmaker___parent___internal___type
  filmmaker___parent___parent___children
  filmmaker___parent___parent___id
  filmmaker___pronouns
  filmmaker___spaceId
  filmmaker___sys___revision
  filmmaker___sys___type
  filmmaker___updatedAt
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  node_locale
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  spaceId
  stillPreview___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___children___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___children___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___children___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___children___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___children___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___children___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___children___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___children___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___children___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___children___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___children___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___children___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___contentful_id
  stillPreview___createdAt
  stillPreview___description
  stillPreview___file___contentType
  stillPreview___file___details___size
  stillPreview___file___fileName
  stillPreview___file___url
  stillPreview___gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___id
  stillPreview___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___node_locale
  stillPreview___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___parent___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___parent___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___parent___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___parent___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___parent___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___parent___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___parent___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___parent___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___parent___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___parent___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___parent___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___parent___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  stillPreview___spaceId
  stillPreview___sys___revision
  stillPreview___sys___type
  stillPreview___title
  stillPreview___updatedAt
  sys___contentType___sys___id
  sys___contentType___sys___linkType
  sys___contentType___sys___type
  sys___revision
  sys___type
  title
  updatedAt
  videoSrc
}

enum ContentfulImageCropFocus {
  BOTTOM
  BOTTOM_LEFT
  BOTTOM_RIGHT
  CENTER
  FACE
  FACES
  LEFT
  RIGHT
  TOP
  TOP_LEFT
  TOP_RIGHT
}

enum ContentfulLinkFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  contentful_id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  node_locale
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

enum ContentfulPageFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  contentful_id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  node_locale
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

enum ContentfulPersonFieldsEnum {
  bio___raw
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  contentful_id
  createdAt
  film
  film___animPreview___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___animPreview___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___animPreview___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___animPreview___contentful_id
  film___animPreview___createdAt
  film___animPreview___description
  film___animPreview___file___contentType
  film___animPreview___file___fileName
  film___animPreview___file___url
  film___animPreview___gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___animPreview___id
  film___animPreview___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___animPreview___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___animPreview___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___animPreview___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___animPreview___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___animPreview___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___animPreview___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___animPreview___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___animPreview___node_locale
  film___animPreview___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___animPreview___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___animPreview___spaceId
  film___animPreview___sys___revision
  film___animPreview___sys___type
  film___animPreview___title
  film___animPreview___updatedAt
  film___childContentfulFilmCreditsTextNode___children
  film___childContentfulFilmCreditsTextNode___children___children
  film___childContentfulFilmCreditsTextNode___children___id
  film___childContentfulFilmCreditsTextNode___credits
  film___childContentfulFilmCreditsTextNode___id
  film___childContentfulFilmCreditsTextNode___internal___content
  film___childContentfulFilmCreditsTextNode___internal___contentDigest
  film___childContentfulFilmCreditsTextNode___internal___description
  film___childContentfulFilmCreditsTextNode___internal___fieldOwners
  film___childContentfulFilmCreditsTextNode___internal___ignoreType
  film___childContentfulFilmCreditsTextNode___internal___mediaType
  film___childContentfulFilmCreditsTextNode___internal___owner
  film___childContentfulFilmCreditsTextNode___internal___type
  film___childContentfulFilmCreditsTextNode___parent___children
  film___childContentfulFilmCreditsTextNode___parent___id
  film___childContentfulFilmCreditsTextNode___sys___type
  film___childContentfulFilmDescriptionTextNode___children
  film___childContentfulFilmDescriptionTextNode___children___children
  film___childContentfulFilmDescriptionTextNode___children___id
  film___childContentfulFilmDescriptionTextNode___description
  film___childContentfulFilmDescriptionTextNode___id
  film___childContentfulFilmDescriptionTextNode___internal___content
  film___childContentfulFilmDescriptionTextNode___internal___contentDigest
  film___childContentfulFilmDescriptionTextNode___internal___description
  film___childContentfulFilmDescriptionTextNode___internal___fieldOwners
  film___childContentfulFilmDescriptionTextNode___internal___ignoreType
  film___childContentfulFilmDescriptionTextNode___internal___mediaType
  film___childContentfulFilmDescriptionTextNode___internal___owner
  film___childContentfulFilmDescriptionTextNode___internal___type
  film___childContentfulFilmDescriptionTextNode___parent___children
  film___childContentfulFilmDescriptionTextNode___parent___id
  film___childContentfulFilmDescriptionTextNode___sys___type
  film___children
  film___childrenContentfulFilmCreditsTextNode
  film___childrenContentfulFilmCreditsTextNode___children
  film___childrenContentfulFilmCreditsTextNode___children___children
  film___childrenContentfulFilmCreditsTextNode___children___id
  film___childrenContentfulFilmCreditsTextNode___credits
  film___childrenContentfulFilmCreditsTextNode___id
  film___childrenContentfulFilmCreditsTextNode___internal___content
  film___childrenContentfulFilmCreditsTextNode___internal___contentDigest
  film___childrenContentfulFilmCreditsTextNode___internal___description
  film___childrenContentfulFilmCreditsTextNode___internal___fieldOwners
  film___childrenContentfulFilmCreditsTextNode___internal___ignoreType
  film___childrenContentfulFilmCreditsTextNode___internal___mediaType
  film___childrenContentfulFilmCreditsTextNode___internal___owner
  film___childrenContentfulFilmCreditsTextNode___internal___type
  film___childrenContentfulFilmCreditsTextNode___parent___children
  film___childrenContentfulFilmCreditsTextNode___parent___id
  film___childrenContentfulFilmCreditsTextNode___sys___type
  film___childrenContentfulFilmDescriptionTextNode
  film___childrenContentfulFilmDescriptionTextNode___children
  film___childrenContentfulFilmDescriptionTextNode___children___children
  film___childrenContentfulFilmDescriptionTextNode___children___id
  film___childrenContentfulFilmDescriptionTextNode___description
  film___childrenContentfulFilmDescriptionTextNode___id
  film___childrenContentfulFilmDescriptionTextNode___internal___content
  film___childrenContentfulFilmDescriptionTextNode___internal___contentDigest
  film___childrenContentfulFilmDescriptionTextNode___internal___description
  film___childrenContentfulFilmDescriptionTextNode___internal___fieldOwners
  film___childrenContentfulFilmDescriptionTextNode___internal___ignoreType
  film___childrenContentfulFilmDescriptionTextNode___internal___mediaType
  film___childrenContentfulFilmDescriptionTextNode___internal___owner
  film___childrenContentfulFilmDescriptionTextNode___internal___type
  film___childrenContentfulFilmDescriptionTextNode___parent___children
  film___childrenContentfulFilmDescriptionTextNode___parent___id
  film___childrenContentfulFilmDescriptionTextNode___sys___type
  film___children___children
  film___children___children___children
  film___children___children___id
  film___children___id
  film___children___internal___content
  film___children___internal___contentDigest
  film___children___internal___description
  film___children___internal___fieldOwners
  film___children___internal___ignoreType
  film___children___internal___mediaType
  film___children___internal___owner
  film___children___internal___type
  film___children___parent___children
  film___children___parent___id
  film___contentful_id
  film___createdAt
  film___credits___children
  film___credits___children___children
  film___credits___children___id
  film___credits___credits
  film___credits___id
  film___credits___internal___content
  film___credits___internal___contentDigest
  film___credits___internal___description
  film___credits___internal___fieldOwners
  film___credits___internal___ignoreType
  film___credits___internal___mediaType
  film___credits___internal___owner
  film___credits___internal___type
  film___credits___parent___children
  film___credits___parent___id
  film___credits___sys___type
  film___description___children
  film___description___children___children
  film___description___children___id
  film___description___description
  film___description___id
  film___description___internal___content
  film___description___internal___contentDigest
  film___description___internal___description
  film___description___internal___fieldOwners
  film___description___internal___ignoreType
  film___description___internal___mediaType
  film___description___internal___owner
  film___description___internal___type
  film___description___parent___children
  film___description___parent___id
  film___description___sys___type
  film___filmmaker
  film___filmmaker___bio___raw
  film___filmmaker___children
  film___filmmaker___children___children
  film___filmmaker___children___id
  film___filmmaker___contentful_id
  film___filmmaker___createdAt
  film___filmmaker___film
  film___filmmaker___film___children
  film___filmmaker___film___childrenContentfulFilmCreditsTextNode
  film___filmmaker___film___childrenContentfulFilmDescriptionTextNode
  film___filmmaker___film___contentful_id
  film___filmmaker___film___createdAt
  film___filmmaker___film___filmmaker
  film___filmmaker___film___id
  film___filmmaker___film___node_locale
  film___filmmaker___film___spaceId
  film___filmmaker___film___title
  film___filmmaker___film___updatedAt
  film___filmmaker___film___videoSrc
  film___filmmaker___firstName
  film___filmmaker___id
  film___filmmaker___internal___content
  film___filmmaker___internal___contentDigest
  film___filmmaker___internal___description
  film___filmmaker___internal___fieldOwners
  film___filmmaker___internal___ignoreType
  film___filmmaker___internal___mediaType
  film___filmmaker___internal___owner
  film___filmmaker___internal___type
  film___filmmaker___lastName
  film___filmmaker___node_locale
  film___filmmaker___parent___children
  film___filmmaker___parent___id
  film___filmmaker___pronouns
  film___filmmaker___spaceId
  film___filmmaker___sys___revision
  film___filmmaker___sys___type
  film___filmmaker___updatedAt
  film___id
  film___internal___content
  film___internal___contentDigest
  film___internal___description
  film___internal___fieldOwners
  film___internal___ignoreType
  film___internal___mediaType
  film___internal___owner
  film___internal___type
  film___node_locale
  film___parent___children
  film___parent___children___children
  film___parent___children___id
  film___parent___id
  film___parent___internal___content
  film___parent___internal___contentDigest
  film___parent___internal___description
  film___parent___internal___fieldOwners
  film___parent___internal___ignoreType
  film___parent___internal___mediaType
  film___parent___internal___owner
  film___parent___internal___type
  film___parent___parent___children
  film___parent___parent___id
  film___spaceId
  film___stillPreview___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___stillPreview___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___stillPreview___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___stillPreview___contentful_id
  film___stillPreview___createdAt
  film___stillPreview___description
  film___stillPreview___file___contentType
  film___stillPreview___file___fileName
  film___stillPreview___file___url
  film___stillPreview___gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___stillPreview___id
  film___stillPreview___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___stillPreview___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___stillPreview___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___stillPreview___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___stillPreview___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___stillPreview___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___stillPreview___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___stillPreview___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___stillPreview___node_locale
  film___stillPreview___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___stillPreview___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  film___stillPreview___spaceId
  film___stillPreview___sys___revision
  film___stillPreview___sys___type
  film___stillPreview___title
  film___stillPreview___updatedAt
  film___sys___revision
  film___sys___type
  film___title
  film___updatedAt
  film___videoSrc
  firstName
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  lastName
  node_locale
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pronouns
  spaceId
  sys___contentType___sys___id
  sys___contentType___sys___linkType
  sys___contentType___sys___type
  sys___revision
  sys___type
  updatedAt
}

enum ContentfulRoleFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  contentful_id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  node_locale
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

enum DirectoryFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  changeTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum FileFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  childImageSharp___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___children___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fixed___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___originalImg
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___presentationHeight
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___presentationWidth
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___sizes
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___fluid___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___original___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___original___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___original___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___parent___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childImageSharp___resize___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children
  childrenImageSharp
  childrenImageSharp___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___children___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___children___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___children___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___children___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___children___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___children___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___children___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___children___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___children___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___children___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___children___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___children___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fixed___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___originalImg
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___presentationHeight
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___presentationWidth
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___sizes
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___fluid___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___original___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___original___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___original___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___parent___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___parent___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___parent___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___parent___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___parent___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___parent___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___parent___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___parent___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___parent___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___parent___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___parent___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___parent___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___resize___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___resize___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___resize___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___resize___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___resize___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  childrenImageSharp___resize___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  publicURL
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum GatsbyImageFormat {
  AUTO
  AVIF
  JPG
  NO_CHANGE
  PNG
  WEBP
}

enum GatsbyImageLayout {
  CONSTRAINED
  FIXED
  FULL_WIDTH
}

enum GatsbyImagePlaceholder {
  BLURRED
  DOMINANT_COLOR
  NONE
  TRACED_SVG
}

enum ImageCropFocus {
  ATTENTION
  CENTER
  EAST
  ENTROPY
  NORTH
  NORTHEAST
  NORTHWEST
  SOUTH
  SOUTHEAST
  SOUTHWEST
  WEST
}

enum ImageFit {
  CONTAIN
  COVER
  FILL
  INSIDE
  OUTSIDE
}

enum ImageFormat {
  AUTO
  AVIF
  JPG
  NO_CHANGE
  PNG
  WEBP
}

enum ImageLayout {
  CONSTRAINED
  FIXED
  FULL_WIDTH
}

enum ImagePlaceholder {
  BLURRED
  DOMINANT_COLOR
  NONE
  TRACED_SVG
}

enum ImageResizingBehavior {
  "Crop a part of the original image to match the specified size."
  CROP
  "Crop the image to the specified dimensions, if the original image is smaller than these dimensions, then the image will be upscaled."
  FILL
  NO_CHANGE
  "Same as the default resizing, but adds padding so that the generated image has the specified dimensions."
  PAD
  "Scale the image regardless of the original aspect ratio."
  SCALE
  "When used in association with the f parameter below, creates a thumbnail from the image based on a focus area."
  THUMB
}

enum ImageSharpFieldsEnum {
  children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___children___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  children___parent___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fixed___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___base64
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___originalImg
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___presentationHeight
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___presentationWidth
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___sizes
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___srcSet
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___srcSetWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___srcWebp
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  fluid___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  gatsbyImageData
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  original___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  original___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  original___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___children___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___children___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___children___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___content
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___contentDigest
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___description
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___fieldOwners
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___ignoreType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___mediaType
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___owner
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___internal___type
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___parent___children
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  parent___parent___parent___id
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___aspectRatio
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___height
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___originalName
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___src
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___tracedSVG
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
  resize___width
    @deprecated(
      reason: "Sorting on fields that need arguments to resolve is deprecated."
    )
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_LEFT
  TURNPOLICY_MAJORITY
  TURNPOLICY_MINORITY
  TURNPOLICY_RIGHT
  TURNPOLICY_WHITE
}

enum SiteBuildMetadataFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

enum SiteFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  host
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  jsxRuntime
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pathPrefix
  polyfill
  port
  siteMetadata___description
  siteMetadata___siteUrl
  siteMetadata___title
}

enum SiteFunctionFieldsEnum {
  absoluteCompiledFilePath
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  functionRoute
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  matchPath
  originalAbsoluteFilePath
  originalRelativeFilePath
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pluginName
  relativeCompiledFilePath
}

enum SitePageFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  component
  componentChunkName
  id
  internalComponentName
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  matchPath
  pageContext
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  path
  pluginCreator___browserAPIs
  pluginCreator___children
  pluginCreator___children___children
  pluginCreator___children___children___children
  pluginCreator___children___children___id
  pluginCreator___children___id
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___children___parent___children
  pluginCreator___children___parent___id
  pluginCreator___id
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___name
  pluginCreator___nodeAPIs
  pluginCreator___packageJson
  pluginCreator___parent___children
  pluginCreator___parent___children___children
  pluginCreator___parent___children___id
  pluginCreator___parent___id
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___parent___parent___children
  pluginCreator___parent___parent___id
  pluginCreator___pluginFilepath
  pluginCreator___pluginOptions
  pluginCreator___resolve
  pluginCreator___ssrAPIs
  pluginCreator___version
}

enum SitePluginFieldsEnum {
  browserAPIs
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  nodeAPIs
  packageJson
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pluginFilepath
  pluginOptions
  resolve
  ssrAPIs
  version
}

enum SortOrderEnum {
  ASC
  DESC
}

enum contentfulFilmCreditsTextNodeFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  credits
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  sys___type
}

enum contentfulFilmDescriptionTextNodeFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  description
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  sys___type
}

input AVIFOptions {
  lossless: Boolean
  quality: Int
  speed: Int
}

input BlurredOptions {
  "Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this"
  toFormat: ImageFormat
  "Width of the generated low-res preview. Default is 20px"
  width: Int
}

input BooleanQueryOperatorInput {
  eq: Boolean
  in: [Boolean]
  ne: Boolean
  nin: [Boolean]
}

input ContentfulAssetFileDetailsFilterInput {
  image: ContentfulAssetFileDetailsImageFilterInput
  size: IntQueryOperatorInput
}

input ContentfulAssetFileDetailsImageFilterInput {
  height: IntQueryOperatorInput
  width: IntQueryOperatorInput
}

input ContentfulAssetFileFilterInput {
  contentType: StringQueryOperatorInput
  details: ContentfulAssetFileDetailsFilterInput
  fileName: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input ContentfulAssetFilterInput {
  children: NodeFilterListInput
  contentful_id: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  description: StringQueryOperatorInput
  file: ContentfulAssetFileFilterInput
  gatsbyImageData: JSONQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  node_locale: StringQueryOperatorInput
  parent: NodeFilterInput
  spaceId: StringQueryOperatorInput
  sys: ContentfulAssetSysFilterInput
  title: StringQueryOperatorInput
  updatedAt: DateQueryOperatorInput
}

input ContentfulAssetSortInput {
  fields: [ContentfulAssetFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input ContentfulAssetSysFilterInput {
  revision: IntQueryOperatorInput
  type: StringQueryOperatorInput
}

input ContentfulContentTypeFilterInput {
  children: NodeFilterListInput
  description: StringQueryOperatorInput
  displayField: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  parent: NodeFilterInput
  sys: ContentfulContentTypeSysFilterInput
}

input ContentfulContentTypeSortInput {
  fields: [ContentfulContentTypeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input ContentfulContentTypeSysFilterInput {
  type: StringQueryOperatorInput
}

input ContentfulEntryFilterInput {
  children: NodeFilterListInput
  contentful_id: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  node_locale: StringQueryOperatorInput
  parent: NodeFilterInput
}

input ContentfulEntrySortInput {
  fields: [ContentfulEntryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input ContentfulFilmFilterInput {
  animPreview: ContentfulAssetFilterInput
  childContentfulFilmCreditsTextNode: contentfulFilmCreditsTextNodeFilterInput
  childContentfulFilmDescriptionTextNode: contentfulFilmDescriptionTextNodeFilterInput
  children: NodeFilterListInput
  childrenContentfulFilmCreditsTextNode: contentfulFilmCreditsTextNodeFilterListInput
  childrenContentfulFilmDescriptionTextNode: contentfulFilmDescriptionTextNodeFilterListInput
  contentful_id: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  credits: contentfulFilmCreditsTextNodeFilterInput
  description: contentfulFilmDescriptionTextNodeFilterInput
  filmmaker: ContentfulPersonFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  node_locale: StringQueryOperatorInput
  parent: NodeFilterInput
  spaceId: StringQueryOperatorInput
  stillPreview: ContentfulAssetFilterInput
  sys: ContentfulFilmSysFilterInput
  title: StringQueryOperatorInput
  updatedAt: DateQueryOperatorInput
  videoSrc: StringQueryOperatorInput
}

input ContentfulFilmFilterListInput {
  elemMatch: ContentfulFilmFilterInput
}

input ContentfulFilmSortInput {
  fields: [ContentfulFilmFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input ContentfulFilmSysContentTypeFilterInput {
  sys: ContentfulFilmSysContentTypeSysFilterInput
}

input ContentfulFilmSysContentTypeSysFilterInput {
  id: StringQueryOperatorInput
  linkType: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input ContentfulFilmSysFilterInput {
  contentType: ContentfulFilmSysContentTypeFilterInput
  revision: IntQueryOperatorInput
  type: StringQueryOperatorInput
}

input ContentfulLinkFilterInput {
  children: NodeFilterListInput
  contentful_id: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  node_locale: StringQueryOperatorInput
  parent: NodeFilterInput
}

input ContentfulLinkSortInput {
  fields: [ContentfulLinkFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input ContentfulPageFilterInput {
  children: NodeFilterListInput
  contentful_id: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  node_locale: StringQueryOperatorInput
  parent: NodeFilterInput
}

input ContentfulPageSortInput {
  fields: [ContentfulPageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input ContentfulPersonBioFilterInput {
  raw: StringQueryOperatorInput
}

input ContentfulPersonFilterInput {
  bio: ContentfulPersonBioFilterInput
  children: NodeFilterListInput
  contentful_id: StringQueryOperatorInput
  createdAt: DateQueryOperatorInput
  film: ContentfulFilmFilterListInput
  firstName: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  lastName: StringQueryOperatorInput
  node_locale: StringQueryOperatorInput
  parent: NodeFilterInput
  pronouns: StringQueryOperatorInput
  spaceId: StringQueryOperatorInput
  sys: ContentfulPersonSysFilterInput
  updatedAt: DateQueryOperatorInput
}

input ContentfulPersonFilterListInput {
  elemMatch: ContentfulPersonFilterInput
}

input ContentfulPersonSortInput {
  fields: [ContentfulPersonFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input ContentfulPersonSysContentTypeFilterInput {
  sys: ContentfulPersonSysContentTypeSysFilterInput
}

input ContentfulPersonSysContentTypeSysFilterInput {
  id: StringQueryOperatorInput
  linkType: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input ContentfulPersonSysFilterInput {
  contentType: ContentfulPersonSysContentTypeFilterInput
  revision: IntQueryOperatorInput
  type: StringQueryOperatorInput
}

input ContentfulRoleFilterInput {
  children: NodeFilterListInput
  contentful_id: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  node_locale: StringQueryOperatorInput
  parent: NodeFilterInput
}

input ContentfulRoleSortInput {
  fields: [ContentfulRoleFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DateQueryOperatorInput {
  eq: Date
  gt: Date
  gte: Date
  in: [Date]
  lt: Date
  lte: Date
  ne: Date
  nin: [Date]
}

input DirectoryFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  changeTime: DateQueryOperatorInput
  children: NodeFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
  highlight: String!
  opacity: Int
  shadow: String!
}

input FileFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  childImageSharp: ImageSharpFilterInput
  children: NodeFilterListInput
  childrenImageSharp: ImageSharpFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  publicURL: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
  eq: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input ImageSharpFilterInput {
  children: NodeFilterListInput
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  gatsbyImageData: JSONQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  original: ImageSharpOriginalFilterInput
  parent: NodeFilterInput
  resize: ImageSharpResizeFilterInput
}

input ImageSharpFilterListInput {
  elemMatch: ImageSharpFilterInput
}

input ImageSharpFixedFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
  aspectRatio: FloatQueryOperatorInput
  height: IntQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
  eq: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  ne: Int
  nin: [Int]
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input JPGOptions {
  progressive: Boolean = true
  quality: Int
}

input JSONQueryOperatorInput {
  eq: JSON
  glob: JSON
  in: [JSON]
  ne: JSON
  nin: [JSON]
  regex: JSON
}

input NodeFilterInput {
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input PNGOptions {
  compressionSpeed: Int = 4
  quality: Int
}

input Potrace {
  alphaMax: Float
  background: String
  blackOnWhite: Boolean
  color: String
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  turdSize: Float
  turnPolicy: PotraceTurnPolicy
}

input SiteBuildMetadataFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  host: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  jsxRuntime: StringQueryOperatorInput
  parent: NodeFilterInput
  pathPrefix: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  port: IntQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
}

input SiteFunctionFilterInput {
  absoluteCompiledFilePath: StringQueryOperatorInput
  children: NodeFilterListInput
  functionRoute: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  matchPath: StringQueryOperatorInput
  originalAbsoluteFilePath: StringQueryOperatorInput
  originalRelativeFilePath: StringQueryOperatorInput
  parent: NodeFilterInput
  pluginName: StringQueryOperatorInput
  relativeCompiledFilePath: StringQueryOperatorInput
}

input SiteFunctionSortInput {
  fields: [SiteFunctionFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePageFilterInput {
  children: NodeFilterListInput
  component: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  internalComponentName: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  pageContext: JSONQueryOperatorInput
  parent: NodeFilterInput
  path: StringQueryOperatorInput
  pluginCreator: SitePluginFilterInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
  browserAPIs: StringQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  nodeAPIs: StringQueryOperatorInput
  packageJson: JSONQueryOperatorInput
  parent: NodeFilterInput
  pluginFilepath: StringQueryOperatorInput
  pluginOptions: JSONQueryOperatorInput
  resolve: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
  description: StringQueryOperatorInput
  siteUrl: StringQueryOperatorInput
  title: StringQueryOperatorInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
  eq: String
  glob: String
  in: [String]
  ne: String
  nin: [String]
  regex: String
}

input TransformOptions {
  cropFocus: ImageCropFocus = ATTENTION
  duotone: DuotoneGradient
  fit: ImageFit = COVER
  grayscale: Boolean = false
  rotate: Int = 0
  trim: Float = 0.0
}

input WebPOptions {
  quality: Int
}

input contentfulFilmCreditsTextNodeFilterInput {
  children: NodeFilterListInput
  credits: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  sys: contentfulFilmCreditsTextNodeSysFilterInput
}

input contentfulFilmCreditsTextNodeFilterListInput {
  elemMatch: contentfulFilmCreditsTextNodeFilterInput
}

input contentfulFilmCreditsTextNodeSortInput {
  fields: [contentfulFilmCreditsTextNodeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input contentfulFilmCreditsTextNodeSysFilterInput {
  type: StringQueryOperatorInput
}

input contentfulFilmDescriptionTextNodeFilterInput {
  children: NodeFilterListInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  sys: contentfulFilmDescriptionTextNodeSysFilterInput
}

input contentfulFilmDescriptionTextNodeFilterListInput {
  elemMatch: contentfulFilmDescriptionTextNodeFilterInput
}

input contentfulFilmDescriptionTextNodeSortInput {
  fields: [contentfulFilmDescriptionTextNodeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input contentfulFilmDescriptionTextNodeSysFilterInput {
  type: StringQueryOperatorInput
}

"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON
